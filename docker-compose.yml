services:
  app:
    build:
      context: .
      args:
        - VCS_VERSION=${GIT_COMMIT_HASH} # Build-time arg
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      POSTGRES_PASSWORD: /run/secrets/db_password
      SECRET_KEY: ${SECRET_KEY}
      TOKEN_ALGORITHM: ${TOKEN_ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      #VCS_VERSION: ${GIT_COMMIT_HASH} # Runtime arg
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app/api:ro
    secrets:
      - db_password
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    ports:
      - "5432:5432"
    volumes:
      - ./.pgdata:/var/lib/postgresql/data:rw
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    restart: always

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: test1234
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - .pgadmin:/var/lib/pgadmin
    healthcheck:
      test: ["CMD-SHELL", "pgrep gunicorn"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
        restart: true

secrets:
  db_password:
    file: ${DATABASE_PASSWORD_FILE}
