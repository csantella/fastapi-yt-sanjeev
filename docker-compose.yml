services:
  app:
    build: .
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: /run/secrets/db_password
    ports:
      - "8000:8000"
    volumes:
      - ./api:/api:ro
    secrets:
      - db_password
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: /run/secrets/db_password
    ports:
      - "5432:5432"
    volumes:
      - ./.pgdata:/var/lib/postgresql/data:rw
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    restart: always

secrets:
  db_password:
    file: ${POSTGRES_PASSWORD_FILE}
